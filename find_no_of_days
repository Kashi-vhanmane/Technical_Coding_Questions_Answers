
# str1=input("Enter the input:")
# str2=input("Enter the input you want to remove from original string:")
#
# res=""
# for i in range(len(str1)):
#     if str1[i] not in str2:
#         res+=str1[i]
# print(res)

#
# l=[5,1,2,3,4,5]
# def solve(option):
#     option.sort()
#     return option[:2]
#
# print(solve(l))

# time="00:45"
#
# def solve(time):
#     t=time.split(":")
#     if(int(t[0])<12):
#         return "Am"
#     else:
#         return "Pm"
# print(solve(time))

import  math

# n=10
# l=[i for i in range(0,n+1,2)]
# print(l)
# print(sum(l))


# def no_of_ways(s):
#     n = len(s)
#
#     # To store the count of
#     # prefix and suffix
#     count_left = 0
#     count_right = 0
#
#     # Loop to count prefix
#     for i in range(0, n, 1):
#         if (s[i] == s[0]):
#             count_left += 1
#         else:
#             break
#
#     # Loop to count suffix
#     i = n - 1
#     while (i >= 0):
#         if (s[i] == s[n - 1]):
#             count_right += 1
#         else:
#             break
#
#         i -= 1
#
#     # First and last characters of
#     # the string are same
#     if (s[0] == s[n - 1]):
#         return ((count_left + 1) *
#                 (count_right + 1))
#
#     # Otherwise
#     else:
#         return (count_left + count_right + 1)
#
#
# # Driver Code
# if __name__ == '__main__':
#     s = "abaa"
#     print(no_of_ways(s))

# This code is contri



def solve(date):
    str=date.split("-")
    month=int(str[1])
    print("Total Months:",month)
    day=int(str[0])
    evenmonth=[]
    oddmonth=[]
    feb=0
    july=0
    if(month>2):
        if(int(str[2])%4==0):
            feb=29
        else:
            feb=28
    if(month>7):
        july=31
    for i in range(1,month):

        if(i%2==0):

            if(i==2):
                print("feb:",feb)
                continue
            print("Even Months:", i)
            evenmonth.append(30)
            print("Total of even months:",evenmonth)
        else:

            if(i==7):
                print("July:",july)
                continue
            print("Odd Months:", i)
            oddmonth.append(31)
            print("Total of oddMonths:",oddmonth)


    if(day>31 or month>12):
        return "Invalid result"
    else:
        totaldays=sum(evenmonth)+sum(oddmonth)+feb+july+day
        return totaldays

date="32-01-2023"
print("Total Days:",solve(date))






